*masquerade.txt*	Tools to edit multiple selections
						Last change:14-Feb-2018.

Author  : machakann <https://github.com/machakann>
License : MIT license
Copyright (c) 2017 Masaaki Nakamura {{{

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
}}}

Requirement:
	Vim 8.0 or higher
	|multiselect.vim|	<https://github.com/machakann/vim-multiselect>

==============================================================================
INDEX					*masquerade-index*

INTRODUCTION				|masquerade-introduction|
KEYMAPPINGS				|masquerade-keymappings|
COMMANDS				|masquerade-commands|
HIGHLIGHT GROUPS			|masquerade-higroups|
OPTIONS					|masquerade-options|

==============================================================================
INTRODUCTION				*masquerade-introduction*

*masquerade.vim* provides wrapped operators to work with |multiselect.vim|.
These operators edit texts as repeating sets of visual selection and calling
an original |operator| for each multi-selected regions.

This plugin prepares the following wrapped operators. Strictly speaking, some
of them are not operators but you may found them useful when you try.

	original	wrapped operator

	y		<Plug>(masquerade-y)
	Y		<Plug>(masquerade-Y)

	d		<Plug>(masquerade-d)
	D		<Plug>(masquerade-D)
	x		<Plug>(masquerade-x)
	X		<Plug>(masquerade-X)

	c		<Plug>(masquerade-c)
	C		<Plug>(masquerade-C)
	s		<Plug>(masquerade-s)
	S		<Plug>(masquerade-S)

	p		<Plug>(masquerade-p)
	P		<Plug>(masquerade-P)
	gp		<Plug>(masquerade-gp)
	gP		<Plug>(masquerade-gP)

	i		<Plug>(masquerade-i)
	a		<Plug>(masquerade-a)

	<		<Plug>(masquerade-<)
	>		<Plug>(masquerade->)

	g~		<Plug>(masquerade-g~)
	~		<Plug>(masquerade-~)
	gu		<Plug>(masquerade-gu)
	gU		<Plug>(masquerade-gU)
	g?		<Plug>(masquerade-g?)
	gq		<Plug>(masquerade-gq)
	gw		<Plug>(masquerade-gw)
	=		<Plug>(masquerade-=)

	!		<Plug>(masquerade-!)

==============================================================================
KEYMAPPINGS				*masquerade-keymappings*

Those keymappings edit all multi-selection in |Normal| mode, while edit only
the texts inside visual selection in |Visual| mode. The visual selection works
like a filter. In principle, all the other selections would be unselected
after an action but only |<Plug>(masquerade-Y)|, |<Plug>(masquerade-D)|,
|<Plug>(masquerade-X)|, |<Plug>(masquerade-C)|, |<Plug>(masquerade-S)|
are the exceptions.



["x]<Plug>(masquerade-y)		*<Plug>(masquerade-y)*
["x]<Plug>(masquerade-Y)		*<Plug>(masquerade-Y)*
	These keymappings yanks multi-selected regions. If those regions are
	only |characterwise| and |blockwise-visual| selections, the yanked
	texts are assembled into a blockwise text to save the given register.
	If at least one |linewise| text is included, those texts are saved as
	a |linewise| text.
>
		map y <Plug>(masquerade-y)
		nmap Y <Plug>(masquerade-Y)
		xmap Y <Plug>(masquerade-Y)
<
	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-y)| and |<Plug>(masquerade-fallback-Y)|,
	which behave as |y| and |Y|, respectively.



["x]<Plug>(masquerade-d)		*<Plug>(masquerade-d)*
["x]<Plug>(masquerade-D)		*<Plug>(masquerade-D)*
["x]<Plug>(masquerade-x)		*<Plug>(masquerade-x)*
["x]<Plug>(masquerade-X)		*<Plug>(masquerade-X)*
	These keymappings deletes multi-selected regions.
>
		map d <Plug>(masquerade-d)
		nmap D <Plug>(masquerade-D)
		xmap D <Plug>(masquerade-D)
		nmap x <Plug>(masquerade-x)
		xmap x <Plug>(masquerade-x)
		nmap X <Plug>(masquerade-X)
		xmap X <Plug>(masquerade-X)
<
	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-d)|, |<Plug>(masquerade-fallback-D)|,
	|<Plug>(masquerade-fallback-x)|, and |<Plug>(masquerade-fallback-X)|
	which behave as |d|, |D|, |x| and |X|, respectively.

	The deleted texts are handled like |<Plug>(masquerade-y)|.



["x]<Plug>(masquerade-c)		*<Plug>(masquerade-c)*
["x]<Plug>(masquerade-C)		*<Plug>(masquerade-C)*
["x]<Plug>(masquerade-s)		*<Plug>(masquerade-s)*
["x]<Plug>(masquerade-S)		*<Plug>(masquerade-S)*
	These keymappings change texts in multi-selected regions.

	NOTE: These commands move cursor to the last multiselect item.
>
		map c <Plug>(masquerade-c)
		nmap C <Plug>(masquerade-C)
		xmap C <Plug>(masquerade-C)
		nmap s <Plug>(masquerade-s)
		xmap s <Plug>(masquerade-s)
<
	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-c)|, |<Plug>(masquerade-fallback-C)|,
	|<Plug>(masquerade-fallback-s)|, and |<Plug>(masquerade-fallback-S)|
	which behave as |c|, |C|, |s| and |S|, respectively.

	The deleted texts are handled like |<Plug>(masquerade-y)|.



["x]<Plug>(masquerade-p)		*<Plug>(masquerade-p)*
["x]<Plug>(masquerade-P)		*<Plug>(masquerade-P)*
["x]<Plug>(masquerade-gp)		*<Plug>(masquerade-gp)*
["x]<Plug>(masquerade-gP)		*<Plug>(masquerade-gP)*
	These keymappings paste a text into multi-selected regions.
>
		nmap p <Plug>(masquerade-p)
		xmap p <Plug>(masquerade-p)
		nmap P <Plug>(masquerade-P)
		xmap P <Plug>(masquerade-P)
		nmap gp <Plug>(masquerade-p)
		xmap gp <Plug>(masquerade-p)
<
	As different from the original commands, the given register is
	restored after all operation.

	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-p)|, |<Plug>(masquerade-fallback-P)|,
	|<Plug>(masquerade-fallback-gp)| and |<Plug>(masquerade-fallback-gP)|,
	which behave as |p|, |P|, |gp| and |gP|, respectively.



[count]<Plug>(masquerade-i)		*<Plug>(masquerade-i)*
[count]<Plug>(masquerade-I)		*<Plug>(masquerade-I)*
[count]<Plug>(masquerade-a)		*<Plug>(masquerade-a)*
[count]<Plug>(masquerade-A)		*<Plug>(masquerade-A)*
	These keymappings insert a text into the head/tail of multi-selected
	regions.

	NOTE: These commands move cursor to the last multiselect item.
>
		nmap i <Plug>(masquerade-i)
		xmap I <Plug>(masquerade-i)
		nmap a <Plug>(masquerade-a)
		xmap A <Plug>(masquerade-a)
<
	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-i)|, |<Plug>(masquerade-fallback-I)|,
	|<Plug>(masquerade-fallback-a)|, and |<Plug>(masquerade-fallback-A)|,
	, which behave as |i|, |I|, |a| and |A|, respectively.



[count]<Plug>(masquerade-<)		*<Plug>(masquerade-<)*
[count]<Plug>(masquerade->)		*<Plug>(masquerade->)*
	These keymappings dedent/indent lines of multi-selected regions.
>
		map < <Plug>(masquerade-<)
		map > <Plug>(masquerade->)
<
	If there are no selections in the current buffer, these keymappings
	fallbacks to
	|<Plug>(masquerade-fallback-<)| and |<Plug>(masquerade-fallback->)|,
	which behave as |<| and |>|, respectively.



<Plug>(masquerade-g~)			*<Plug>(masquerade-g~)*
<Plug>(masquerade-~)			*<Plug>(masquerade-~)*
	These keymappings switch case of multi-selected regions.
>
		map g~ <Plug>(masquerade-g~)
		map ~ <Plug>(masquerade-~)
<
	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-g~)| and |<Plug>(masquerade-fallback-~)|,
	which behave as |g~| and |~|, respectively.



<Plug>(masquerade-gu)			*<Plug>(masquerade-gu)*
<Plug>(masquerade-gU)			*<Plug>(masquerade-gU)*
	These keymappings make multi-selected regions lower/upper case.
>
		map gu <Plug>(masquerade-gu)
		map gU <Plug>(masquerade-gU)
<
	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-gu)| and |<Plug>(masquerade-fallback-gU)|,
	which behave as |gu| and |gU|, respectively.



<Plug>(masquerade-g?)			*<Plug>(masquerade-g?)*
	This keymapping Rot13 encodes multi-selected regions.
>
		map g? <Plug>(masquerade-g?)
<
	If there are no selections in the current buffer, it fallbacks to
	|<Plug>(masquerade-fallback-g?)| which behaves as |g?|.



<Plug>(masquerade-gq)			*<Plug>(masquerade-gq)*
<Plug>(masquerade-gw)			*<Plug>(masquerade-gw)*
	This keymapping formats lines of multi-selected regions.
>
		map gq <Plug>(masquerade-gq)
		map gw <Plug>(masquerade-gw)
<
	If there are no selections in the current buffer, these keymappings
	fallback to
	|<Plug>(masquerade-fallback-gq)| and |<Plug>(masquerade-fallback-gw)|,
	which behave as |gq| and |gw|, respectively.



<Plug>(masquerade-=)			*<Plug>(masquerade-=)*
	This keymapping filters lines of multi-selected regions through the
	external program given with 'equalprg'.
>
		map = <Plug>(masquerade-=)
<
	If there are no selections in the current buffer, it fallbacks to
	|<Plug>(masquerade-fallback-=)| which behaves as |=|.



<Plug>(masquerade-!){filter}		*<Plug>(masquerade-!)*
	This keymapping filters lines of multi-selected regions through the
	external program {filter}.
>
		map ! <Plug>(masquerade-!)
<
	If there are no selections in the current buffer, it fallbacks to
	|<Plug>(masquerade-fallback-!)| which behaves as |!|.


Fallback keymappings~
<Plug>(masquerade-fallback-y)		*<Plug>(masquerade-fallback-y)*
<Plug>(masquerade-fallback-Y)		*<Plug>(masquerade-fallback-Y)*
<Plug>(masquerade-fallback-d)		*<Plug>(masquerade-fallback-d)*
<Plug>(masquerade-fallback-D)		*<Plug>(masquerade-fallback-D)*
<Plug>(masquerade-fallback-x)		*<Plug>(masquerade-fallback-x)*
<Plug>(masquerade-fallback-X)		*<Plug>(masquerade-fallback-X)*
<Plug>(masquerade-fallback-c)		*<Plug>(masquerade-fallback-c)*
<Plug>(masquerade-fallback-C)		*<Plug>(masquerade-fallback-C)*
<Plug>(masquerade-fallback-s)		*<Plug>(masquerade-fallback-s)*
<Plug>(masquerade-fallback-S)		*<Plug>(masquerade-fallback-S)*
<Plug>(masquerade-fallback-p)		*<Plug>(masquerade-fallback-p)*
<Plug>(masquerade-fallback-P)		*<Plug>(masquerade-fallback-P)*
<Plug>(masquerade-fallback-gp)		*<Plug>(masquerade-fallback-gp)*
<Plug>(masquerade-fallback-gP)		*<Plug>(masquerade-fallback-gP)*
<Plug>(masquerade-fallback-i)		*<Plug>(masquerade-fallback-i)*
<Plug>(masquerade-fallback-I)		*<Plug>(masquerade-fallback-I)*
<Plug>(masquerade-fallback-a)		*<Plug>(masquerade-fallback-a)*
<Plug>(masquerade-fallback-A)		*<Plug>(masquerade-fallback-A)*
<Plug>(masquerade-fallback-<)		*<Plug>(masquerade-fallback-<)*
<Plug>(masquerade-fallback->)		*<Plug>(masquerade-fallback->)*
<Plug>(masquerade-fallback-g~)		*<Plug>(masquerade-fallback-g~)*
<Plug>(masquerade-fallback-~)		*<Plug>(masquerade-fallback-~)*
<Plug>(masquerade-fallback-gu)		*<Plug>(masquerade-fallback-gu)*
<Plug>(masquerade-fallback-gU)		*<Plug>(masquerade-fallback-gU)*
<Plug>(masquerade-fallback-g?)		*<Plug>(masquerade-fallback-g?)*
<Plug>(masquerade-fallback-gq)		*<Plug>(masquerade-fallback-gq)*
<Plug>(masquerade-fallback-gw)		*<Plug>(masquerade-fallback-gw)*
<Plug>(masquerade-fallback-=)		*<Plug>(masquerade-fallback-=)*
<Plug>(masquerade-fallback-!)		*<Plug>(masquerade-fallback-!)*
	If there was no multiselection, masquerade-keymappings fallback to
	these keymappings. Each keymapping is equal to the original keymapping
	in default.
>
	noremap <Plug>(masquerade-fallback-y) y
<
	Those keymappings are useful when you want to change the behavior of
	the fallback key.
>
	nnoremap <Plug>(masquerade-fallback-Y) y$
<


==============================================================================
COMMANDS				*masquerade-commands*

:MasqueradeOff				*:MasqueradeOff*
	This command disables the masquerade keymappings. These keys are
	fallen back to the original commands.

:MasqueradeOn				*:MasqueradeOn*
	This command enables the masquerade keymappings.


==============================================================================
HIGHLIGHT GROUPS			*masquerade-higroups*

MasqueradeChange			*hl-MasqueradeChange*
	This highlight group is applied for changed texts. It is linked to
	|hl-DiffChange| in default. >
		highlight default link MasqueradeChange DiffChange
<
	The highlight color can be optimized by |:highlight| command. >
		highlight MultiselectItem ctermfg=White ctermbg=Red
		                               \ guifg=White   guibg=Red
<

==============================================================================
OPTIONS					*masquerade-options*

g:masquerade#highlight			*g:masquerade#highlight*
	This option controls the highlight of changed texts. It should be a
	highlight duration in millisecond. >
		let g:masquerade#highlight = 300
<
	The default value is 300. If it is less than 0, the changed texts will
	not be highlighted.


g:masquerade#keepothers			*g:masquerade#keepothers*
	If this option is |TRUE|, unedited multiselect items with visual
	selection filter will be kept checked. Otherwise they are unchecked as
	usual. The default value is |FALSE|. >
		let g:masquerade#keepothers = 1
<


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet::fdl=0:fen:fdm=marker:noet:
